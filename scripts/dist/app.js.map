{"version":3,"sources":["../lib/app.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["'use strict'\r\n  //jQuery and other events\r\n  $('form').on('submit', function () {\r\n    event.preventDefault();\r\n    const query = $('input[type=search]').val();\r\n\r\n    //call Backbone methods\r\n    const userCollection = new GistCollection([], { user: query });\r\n    const userGistList = new ListView({ collection: userCollection });\r\n  });\r\n\r\n//helpers and handlers\r\nfunction errorHandler (collection, response, options) {\r\n  const user = new UserView ();\r\n  console.log(`There was an error: ${response.responseText}`);\r\n  $('#output').html(`<h3>That user doesn't appear to exist</h3>`);\r\n};\r\n\r\n//backbone logic for interacting with GitHub API\r\nlet UserView = Backbone.View.extend({\r\n  //view logic for showing user information (profile pic, name, etc)\r\n  defaults: {\r\n    login: '??',\r\n    avatar_url: 'https://avatars1.githubusercontent.com/u/5244508?v=3&s=96'\r\n  },\r\n  el:'#user',\r\n  initialize (options) {\r\n    if (options) this.render(options.avatar_url, options.login);\r\n    else this.render(this.defaults.avatar_url, this.defaults.login);\r\n  },\r\n  render (avatar, login) {\r\n    const parent = this.$el;\r\n    parent.children('img').attr('src', avatar).removeClass('hidden');\r\n    parent.children('div').html(`<h3>${login}</h3>`).removeClass('hidden');\r\n  }\r\n});\r\n\r\nlet GistView = Backbone.View.extend({\r\n  //view logic for individual gists\r\n  tagName: 'div',\r\n  className: 'gist',\r\n  render (model, target, count) {\r\n    const link = model.attributes.html_url;\r\n    target.append(`<${this.tagName} class=\"${this.className}\"><a href=\"${link}\">gist ${count}</a></div>`);\r\n  }\r\n});\r\n\r\nlet ListView = Backbone.View.extend({\r\n  //view logic for entire list of public gists\r\n  el:'#output',\r\n  initialize () {\r\n    this.render()\r\n  },\r\n  render () {\r\n    this.collection.fetch({ error: errorHandler }).then( () => {\r\n\r\n      if(this.collection.length === 0) {\r\n        this.$el.html(`<h3>Sorry, no gists found for that user</h3>`);\r\n        const user = new UserView ();\r\n      } else {\r\n        //render user\r\n        const first = this.collection.at(0);\r\n        const owner = first.attributes.owner;\r\n        const user = new UserView ({ login: owner.login, avatar_url: owner.avatar_url });\r\n\r\n        //render gists\r\n        let i = 1;\r\n        this.$el.empty();\r\n        this.collection.forEach( item => {\r\n          const gist = new GistView ();\r\n          const target = this.$el;\r\n          gist.render(item, target, i);\r\n          i++;\r\n        });\r\n      }\r\n\r\n    });\r\n  }\r\n});\r\n\r\nlet GistModel = Backbone.Model.extend({\r\n  //model based on single public gist Object from GitHub API\r\n});\r\n\r\nlet GistCollection = Backbone.Collection.extend({\r\n  //collection of all gists pulled from GitHub API\r\n  model: GistModel,\r\n  initialize (models, options) {\r\n    this.url = `https://api.github.com/users/${options.user}/gists`;\r\n  }\r\n});\r\n\r\n// userCollection and userGistList built on form submission (see jQuery event handlers)\r\n"]}