{"version":3,"sources":["../lib/app.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["define([\r\n  'jquery',\r\n  'underscore',\r\n  'backbone'\r\n], ($, _, Backbone) => {\r\n  function initialize () {\r\n    //jQuery and other events\r\n    $('form').on('submit', () => {\r\n      event.preventDefault();\r\n      const query = $('input[type=search]').val();\r\n\r\n      //call Backbone methods\r\n      const userCollection = new GistCollection([], { user: query });\r\n      const userGistList = new ListView({ collection: userCollection });\r\n    });\r\n\r\n    //helpers and handlers\r\n    function errorHandler (collection, response, options) {\r\n      const user = new UserView ();\r\n      console.log(`There was an error: ${response.responseText}`);\r\n      $('#output').html(`<h3>That user doesn't appear to exist</h3>`);\r\n    };\r\n\r\n    //backbone logic for interacting with GitHub API\r\n    let UserView = Backbone.View.extend({\r\n      //view logic for showing user information (profile pic, name, etc)\r\n      defaults: {\r\n        login: '??',\r\n        html_url: '#',\r\n        avatar_url: 'https://avatars1.githubusercontent.com/u/5244508?v=3&s=96'\r\n      },\r\n      el:'#user',\r\n      initialize (options) {\r\n        if (options) this.render(options.avatar_url, options.html_url, options.login);\r\n        else this.render(this.defaults.avatar_url, this.defaults.html_url, this.defaults.login);\r\n      },\r\n      render (avatar, link, login) {\r\n        const parent = this.$el;\r\n        parent.children('img').attr('src', avatar).removeClass('hidden');\r\n        parent.children('div').html(`<a href=\"${link}\"><h3>${login}</h3></a>`).removeClass('hidden');\r\n      }\r\n    });\r\n\r\n    let GistView = Backbone.View.extend({\r\n      //view logic for individual gists\r\n      tagName: 'div',\r\n      className: 'gist',\r\n      render (model, target, count) {\r\n        const link = model.attributes.html_url;\r\n        const files = Object.keys(model.attributes.files);\r\n        const desc = model.attributes.description && model.attributes.description.length > 0 ? model.attributes.description : '';\r\n\r\n        let fileHtml = ``;\r\n        let i = 0;\r\n        files.forEach( file => {\r\n          if (i < files.length - 1) {\r\n            fileHtml += `${files[i]}, `;\r\n          } else if (i < files.length) {\r\n            fileHtml += `${files[i]}`;\r\n          }\r\n          i++;\r\n        });\r\n\r\n        let finalHtml = ``;\r\n        if (desc.length > 0 ) {\r\n          finalHtml += `<${this.tagName} class=\"${this.className}\">\r\n            <a href=\"${link}\">${fileHtml}</a>\r\n            <p>${desc}</p>\r\n          </div>`;\r\n        } else {\r\n          finalHtml += `<${this.tagName} class=\"${this.className}\">\r\n            <a href=\"${link}\">${fileHtml}</a>\r\n          </div>`;\r\n        }\r\n\r\n        target.append( finalHtml );\r\n      }\r\n    });\r\n\r\n    let ListView = Backbone.View.extend({\r\n      //view logic for entire list of public gists\r\n      el:'#output',\r\n      initialize () {\r\n        this.render();\r\n      },\r\n      render () {\r\n        this.collection.fetch({ error: errorHandler }).then( () => {\r\n\r\n          if(this.collection.length === 0) {\r\n            this.$el.html(`<h3>Sorry, no gists found for that user</h3>`);\r\n            const user = new UserView ();\r\n          } else {\r\n            //render user\r\n            const first = this.collection.at(0);\r\n            const owner = first.attributes.owner;\r\n            const user = new UserView ({ login: owner.login, avatar_url: owner.avatar_url, html_url: owner.html_url });\r\n\r\n            //render gists\r\n            let i = 1;\r\n            this.$el.empty();\r\n            this.collection.forEach( item => {\r\n              const gist = new GistView ();\r\n              const target = this.$el;\r\n              gist.render(item, target, i);\r\n              i++;\r\n            });\r\n          }\r\n\r\n        });\r\n      }\r\n    });\r\n\r\n    let GistModel = Backbone.Model.extend({\r\n      //model based on single public gist Object from GitHub API\r\n    });\r\n\r\n    let GistCollection = Backbone.Collection.extend({\r\n      //collection of all gists pulled from GitHub API\r\n      model: GistModel,\r\n      initialize (models, options) {\r\n        this.url = `https://api.github.com/users/${options.user}/gists`;\r\n      }\r\n    });\r\n\r\n    // userCollection and userGistList built on form submission (see jQuery event handlers)\r\n  }\r\n\r\n  return {\r\n    initialize: initialize\r\n  };\r\n});\r\n"]}